function [ sctNDFile, cellNDFile, boolDoStage, boolDoTimelapse, boolDoWave, boolDoZSeries] = readNDFile( strInputDir, boolDoJobs )
%GETNDFILE Read N-dimesnional acquisition data from Nikon images.
%
% This function checks if a .nd file is present in the given
% directory(strInputDir) and construchts a struct or a cellarray with the
% information in the nd file.  The Nd file is generated by the
% Nikon microscopes (VisiTirf anf VisiScope)

import microscopetool.flatten

% only store one ndfile in the dir, if not an error will be thrown

if nargin == 0
    %%%strInputDir = npc('\\pelkmans.uzh.ch\camelot-share-2\Data\Users\Gabriele\Microscopy\120202_DNM2_mAhCD46\New folder');
    error('%s: Not enough input arguments', mfilename);
elseif nargin >2
    error('%s: You provided too many input arguments', mfilename);
end

fprintf('%s: processing input directory ''%s''\n', mfilename, strInputDir)

cellDirOverview  = {microscopetool.findfilewithregexpi(strInputDir, '.nd', true)};

if ~isempty(cellDirOverview{1,1}) && size(cellDirOverview,1) == 1
    matFileND = fopen (cellDirOverview{1,1});
    cellFilePreND = textscan ( matFileND,'%s %s %s %s %s');
    clear('matFileND');
    cellNDFile (:,1) = strrep(cellFilePreND{:,1}, ',', '');
    cellNDFile (:,2) = strcat(cellFilePreND{1,2}, cellFilePreND{1,3}, cellFilePreND{1,4}, cellFilePreND{1,5});
    clear ('cellFilePreND');
    cellNDFile = strrep(cellNDFile, '"', '');
    sctNDFile = cell2struct(cellNDFile, cellNDFile(:,1), 1);
    sctNDFile = sctNDFile(2,1);
    
else
    error('There is no or several .nd files in: %s', strInputDir);
end

% % Checks for the steps to do
if boolDoJobs 
    boolDoStage = strcmpi(sctNDFile.DoStage, 'TRUE');
    boolDoTimelapse = strcmpi(sctNDFile.DoTimelapse, 'TRUE');
    boolDoWave = strcmp(sctNDFile.DoWave, 'TRUE');
    boolDoZSeries = strcmpi(sctNDFile.DoZSeries, 'TRUE');
end

end

