%%%%LoadData of single


% each directory in endocytome is a project
strRoothPath = npc('\\nas-unizh-imsb1.ethz.ch\share-2-$\Data\Users\110920_A431_w2Tf');
strSettingsFile = '\\nas-unizh-imsb1.ethz.ch\share-2-$\Data\Users\110920_A431_w2Tf\Settings_Cells_MeanIntensity_RescaledGreen_woDiscarding.txt';
  


    
  % list of paths to load
 cellPlateNames = CPdir(strRoothPath);
 cellPlateNames = {cellPlateNames([cellPlateNames(:).isdir]).name}';
 matHasBATCHDirectory = cellfun(@(x) fileattrib2(fullfile(strRoothPath, x, 'BATCH')),cellPlateNames);
 cellPlateNames(~matHasBATCHDirectory) = [];

 
 %Take only single siRNA cell plates
 matIsSingle= cellfun(@isempty,strfind(cellPlateNames,'_s'));
 cellPlateNames(matIsSingle)=[];
 
 
 for iPlate =1:size(cellPlateNames,1)
     
     strPlateRooth= fullfile(strRoothPath,cellPlateNames{iPlate,:});

    [matCompleteData, strFinalFieldName, matCompleteMetaData, structDataColumnsToUse, structMiscSettings, cellstrDataPaths] = getRawProbModelData2(strPlateRooth,strSettingsFile);

    

    matCompleteData(:,1) = log10(matCompleteData(:,1));
    matBadIX = isinf(matCompleteData(:,1)) | isnan(matCompleteData(:,1));
    fprintf('%s: removing %d (%d%%) NaNs or Infs',mfilename,sum(matBadIX),round(100*mean(matBadIX)));
    matCompleteData(matBadIX,:) = [];
    matCompleteMetaData(matBadIX,:) = [];


    % remove some fields...
    % discard both cell size and cell elongation
%         matColIXToRemove = ismember(strColumns,{'AreaShape_Cells_6','AreaShape_Cells_1','CorrectedTotalCellNumberPerWell_Image_1'});
    matColIXToRemove = ismember(strFinalFieldName,{'AreaShape_Cells_6','AreaShape_Cells_1'});
    matCompleteData(:,matColIXToRemove) = []; 
    strFinalFieldName(matColIXToRemove) = [];

    % init corrected values
	

    % plate wise z-score normalization
    
        % z-score everything plate-wise but EDGE & LCD
        matCompleteData(:,[1,4]) = nanzscore_median(matCompleteData(:,[1,4]));

        % do tensor projection clustering per plate
        matPredictedValues = doBinCorrection(matCompleteData(:,:), strFinalFieldName,9,@nanmedian);%,'display'

        % do correction (substraction)
        matCorrectedValues(:,1) = matCompleteData(matPlateIX,1) - matPredictedValues;

%             % z-score first column
        %matCorrectedValues(matPlateIX,1) = nanzscore_median(matCorrectedValues(matPlateIX,1));
        
        
        % calculate well median values
    [matWellMedians, matOutputTCN] = wellfun(@nanmedian, matCorrectedValues, matCompleteMetaData, false);

    % make add trailing empty plate rows and columns
    matWellMedians = pushDatain384(matWellMedians);
    matOutputTCN = pushDatain384(matOutputTCN);

    % discard low cell number
    matWellMedians(matOutputTCN < 150) = NaN;
      
    
    %B score the data
    [~, ~, ~, ~, matBScore, ~] = bscore2(matWellMedians(:,:,iPlate));
        % let's apply, and give it a shot
    matWellMedians(:,:,iPlate) = matWellMedians(:,:,iPlate) - matBScore;   
        
        
         
    matAllData(1,:) = nanzscore_median(matWellMedians(:));
    matAllTCNs(1,:) = matOutputTCN(:);
        
        
    end


   
    for iPlate = 1:16
       

%             subplot(2,2,iPlate)
%             imagesc(matWellMedians(:,:,iPlate))
%             imagesc(matBScore,[-1 1])
%             title(getplatenames(cellstrDataPaths{i}{iPlate}))
    end

   
    %matAllLog2IFs(i,:) = matIncludedFractionPerWell(:);

    
    
    
    
    
[cellGeneSymbols,~, cellGeneIDs] = arrayfun(@lookupplatecontent,[392,393,394,395],'UniformOutput',false);

matAllGeneIDs = cat(3,cellGeneIDs{:});

matGeneIDs = cat(3,cellGeneIDs{:});
matGeneIDs = matGeneIDs(:)';
[matUniqueGeneIDs,m,n] = unique(matGeneIDs);
cellGeneSymbols = cat(3,cellGeneSymbols{:});
cellGeneSymbols = cellGeneSymbols(:)';
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
